// source: obb/session.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.obb.InvalidSessionReason', null, global);
goog.exportSymbol('proto.obb.InvalidSessionReason.Code', null, global);
goog.exportSymbol('proto.obb.SessionCreateRequest', null, global);
goog.exportSymbol('proto.obb.SessionCreateResponse', null, global);
goog.exportSymbol('proto.obb.SessionCreateResponse.SessionCreated', null, global);
goog.exportSymbol('proto.obb.SessionCreateResponse.SessionRejected', null, global);
goog.exportSymbol('proto.obb.SessionCreateResponse.StatusCase', null, global);
goog.exportSymbol('proto.obb.SessionInfoRequest', null, global);
goog.exportSymbol('proto.obb.SessionInfoResponse', null, global);
goog.exportSymbol('proto.obb.SessionInfoResponse.InvalidSession', null, global);
goog.exportSymbol('proto.obb.SessionInfoResponse.StatusCase', null, global);
goog.exportSymbol('proto.obb.SessionInfoResponse.ValidSession', null, global);
goog.exportSymbol('proto.obb.SessionMarket', null, global);
goog.exportSymbol('proto.obb.SessionMarketOutcome', null, global);
goog.exportSymbol('proto.obb.SessionRejectReason', null, global);
goog.exportSymbol('proto.obb.SessionRejectReason.Code', null, global);
goog.exportSymbol('proto.obb.SessionSelection', null, global);
goog.exportSymbol('proto.obb.SessionStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionRejectReason = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.SessionRejectReason, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionRejectReason.displayName = 'proto.obb.SessionRejectReason';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.InvalidSessionReason = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.InvalidSessionReason, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.InvalidSessionReason.displayName = 'proto.obb.InvalidSessionReason';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.obb.SessionCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.obb.SessionCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionCreateRequest.displayName = 'proto.obb.SessionCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.obb.SessionCreateResponse.oneofGroups_);
};
goog.inherits(proto.obb.SessionCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionCreateResponse.displayName = 'proto.obb.SessionCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionCreateResponse.SessionCreated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.obb.SessionCreateResponse.SessionCreated.repeatedFields_, null);
};
goog.inherits(proto.obb.SessionCreateResponse.SessionCreated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionCreateResponse.SessionCreated.displayName = 'proto.obb.SessionCreateResponse.SessionCreated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionCreateResponse.SessionRejected = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.SessionCreateResponse.SessionRejected, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionCreateResponse.SessionRejected.displayName = 'proto.obb.SessionCreateResponse.SessionRejected';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.SessionSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionSelection.displayName = 'proto.obb.SessionSelection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionMarket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.obb.SessionMarket.repeatedFields_, null);
};
goog.inherits(proto.obb.SessionMarket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionMarket.displayName = 'proto.obb.SessionMarket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionMarketOutcome = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.SessionMarketOutcome, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionMarketOutcome.displayName = 'proto.obb.SessionMarketOutcome';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.obb.SessionInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.obb.SessionInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionInfoRequest.displayName = 'proto.obb.SessionInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.obb.SessionInfoResponse.oneofGroups_);
};
goog.inherits(proto.obb.SessionInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionInfoResponse.displayName = 'proto.obb.SessionInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionInfoResponse.ValidSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.SessionInfoResponse.ValidSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionInfoResponse.ValidSession.displayName = 'proto.obb.SessionInfoResponse.ValidSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.obb.SessionInfoResponse.InvalidSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.obb.SessionInfoResponse.InvalidSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.obb.SessionInfoResponse.InvalidSession.displayName = 'proto.obb.SessionInfoResponse.InvalidSession';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionRejectReason.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionRejectReason.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionRejectReason} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionRejectReason.toObject = function(includeInstance, msg) {
  var f, obj = {
code: jspb.Message.getFieldWithDefault(msg, 1, 0),
message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionRejectReason}
 */
proto.obb.SessionRejectReason.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionRejectReason;
  return proto.obb.SessionRejectReason.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionRejectReason} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionRejectReason}
 */
proto.obb.SessionRejectReason.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.obb.SessionRejectReason.Code} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionRejectReason.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionRejectReason.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionRejectReason} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionRejectReason.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.obb.SessionRejectReason.Code = {
  CODE_UNSPECIFIED: 0,
  CODE_INTERNAL: 1,
  CODE_INVALID_ARGUMENT: 2,
  CODE_INVALID_MARKET_COMBINATION: 3
};

/**
 * optional Code code = 1;
 * @return {!proto.obb.SessionRejectReason.Code}
 */
proto.obb.SessionRejectReason.prototype.getCode = function() {
  return /** @type {!proto.obb.SessionRejectReason.Code} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.obb.SessionRejectReason.Code} value
 * @return {!proto.obb.SessionRejectReason} returns this
 */
proto.obb.SessionRejectReason.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.obb.SessionRejectReason.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionRejectReason} returns this
 */
proto.obb.SessionRejectReason.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.InvalidSessionReason.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.InvalidSessionReason.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.InvalidSessionReason} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.InvalidSessionReason.toObject = function(includeInstance, msg) {
  var f, obj = {
code: jspb.Message.getFieldWithDefault(msg, 1, 0),
message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.InvalidSessionReason}
 */
proto.obb.InvalidSessionReason.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.InvalidSessionReason;
  return proto.obb.InvalidSessionReason.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.InvalidSessionReason} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.InvalidSessionReason}
 */
proto.obb.InvalidSessionReason.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.obb.InvalidSessionReason.Code} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.InvalidSessionReason.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.InvalidSessionReason.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.InvalidSessionReason} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.InvalidSessionReason.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.obb.InvalidSessionReason.Code = {
  CODE_UNSPECIFIED: 0,
  CODE_INTERNAL: 1,
  CODE_INVALID_ARGUMENT: 2,
  CODE_EXPIRED: 3,
  CODE_NOT_FOUND: 4
};

/**
 * optional Code code = 1;
 * @return {!proto.obb.InvalidSessionReason.Code}
 */
proto.obb.InvalidSessionReason.prototype.getCode = function() {
  return /** @type {!proto.obb.InvalidSessionReason.Code} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.obb.InvalidSessionReason.Code} value
 * @return {!proto.obb.InvalidSessionReason} returns this
 */
proto.obb.InvalidSessionReason.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.obb.InvalidSessionReason.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.InvalidSessionReason} returns this
 */
proto.obb.InvalidSessionReason.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.obb.SessionCreateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
selectionIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionCreateRequest}
 */
proto.obb.SessionCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionCreateRequest;
  return proto.obb.SessionCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionCreateRequest}
 */
proto.obb.SessionCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelectionIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectionIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string selection_ids = 2;
 * @return {!Array<string>}
 */
proto.obb.SessionCreateRequest.prototype.getSelectionIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.obb.SessionCreateRequest} returns this
 */
proto.obb.SessionCreateRequest.prototype.setSelectionIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.obb.SessionCreateRequest} returns this
 */
proto.obb.SessionCreateRequest.prototype.addSelectionIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.obb.SessionCreateRequest} returns this
 */
proto.obb.SessionCreateRequest.prototype.clearSelectionIdsList = function() {
  return this.setSelectionIdsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.obb.SessionCreateResponse.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.obb.SessionCreateResponse.StatusCase = {
  STATUS_NOT_SET: 0,
  CREATED: 2,
  REJECTED: 3
};

/**
 * @return {proto.obb.SessionCreateResponse.StatusCase}
 */
proto.obb.SessionCreateResponse.prototype.getStatusCase = function() {
  return /** @type {proto.obb.SessionCreateResponse.StatusCase} */(jspb.Message.computeOneofCase(this, proto.obb.SessionCreateResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
created: (f = msg.getCreated()) && proto.obb.SessionCreateResponse.SessionCreated.toObject(includeInstance, f),
rejected: (f = msg.getRejected()) && proto.obb.SessionCreateResponse.SessionRejected.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionCreateResponse}
 */
proto.obb.SessionCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionCreateResponse;
  return proto.obb.SessionCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionCreateResponse}
 */
proto.obb.SessionCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = new proto.obb.SessionCreateResponse.SessionCreated;
      reader.readMessage(value,proto.obb.SessionCreateResponse.SessionCreated.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 3:
      var value = new proto.obb.SessionCreateResponse.SessionRejected;
      reader.readMessage(value,proto.obb.SessionCreateResponse.SessionRejected.deserializeBinaryFromReader);
      msg.setRejected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.obb.SessionCreateResponse.SessionCreated.serializeBinaryToWriter
    );
  }
  f = message.getRejected();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.obb.SessionCreateResponse.SessionRejected.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.obb.SessionCreateResponse.SessionCreated.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionCreateResponse.SessionCreated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionCreateResponse.SessionCreated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateResponse.SessionCreated.toObject = function(includeInstance, msg) {
  var f, obj = {
selectionsList: jspb.Message.toObjectList(msg.getSelectionsList(),
    proto.obb.SessionSelection.toObject, includeInstance),
odds: jspb.Message.getFieldWithDefault(msg, 2, 0),
availableMarketsList: jspb.Message.toObjectList(msg.getAvailableMarketsList(),
    proto.obb.SessionMarket.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionCreateResponse.SessionCreated}
 */
proto.obb.SessionCreateResponse.SessionCreated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionCreateResponse.SessionCreated;
  return proto.obb.SessionCreateResponse.SessionCreated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionCreateResponse.SessionCreated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionCreateResponse.SessionCreated}
 */
proto.obb.SessionCreateResponse.SessionCreated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.obb.SessionSelection;
      reader.readMessage(value,proto.obb.SessionSelection.deserializeBinaryFromReader);
      msg.addSelections(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOdds(value);
      break;
    case 3:
      var value = new proto.obb.SessionMarket;
      reader.readMessage(value,proto.obb.SessionMarket.deserializeBinaryFromReader);
      msg.addAvailableMarkets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionCreateResponse.SessionCreated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionCreateResponse.SessionCreated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateResponse.SessionCreated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.obb.SessionSelection.serializeBinaryToWriter
    );
  }
  f = message.getOdds();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAvailableMarketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.obb.SessionMarket.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SessionSelection selections = 1;
 * @return {!Array<!proto.obb.SessionSelection>}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.getSelectionsList = function() {
  return /** @type{!Array<!proto.obb.SessionSelection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.obb.SessionSelection, 1));
};


/**
 * @param {!Array<!proto.obb.SessionSelection>} value
 * @return {!proto.obb.SessionCreateResponse.SessionCreated} returns this
*/
proto.obb.SessionCreateResponse.SessionCreated.prototype.setSelectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.obb.SessionSelection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.obb.SessionSelection}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.addSelections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.obb.SessionSelection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.obb.SessionCreateResponse.SessionCreated} returns this
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.clearSelectionsList = function() {
  return this.setSelectionsList([]);
};


/**
 * optional uint64 odds = 2;
 * @return {number}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.getOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.obb.SessionCreateResponse.SessionCreated} returns this
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.setOdds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated SessionMarket available_markets = 3;
 * @return {!Array<!proto.obb.SessionMarket>}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.getAvailableMarketsList = function() {
  return /** @type{!Array<!proto.obb.SessionMarket>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.obb.SessionMarket, 3));
};


/**
 * @param {!Array<!proto.obb.SessionMarket>} value
 * @return {!proto.obb.SessionCreateResponse.SessionCreated} returns this
*/
proto.obb.SessionCreateResponse.SessionCreated.prototype.setAvailableMarketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.obb.SessionMarket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.obb.SessionMarket}
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.addAvailableMarkets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.obb.SessionMarket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.obb.SessionCreateResponse.SessionCreated} returns this
 */
proto.obb.SessionCreateResponse.SessionCreated.prototype.clearAvailableMarketsList = function() {
  return this.setAvailableMarketsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionCreateResponse.SessionRejected.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionCreateResponse.SessionRejected.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionCreateResponse.SessionRejected} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateResponse.SessionRejected.toObject = function(includeInstance, msg) {
  var f, obj = {
reason: (f = msg.getReason()) && proto.obb.SessionRejectReason.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionCreateResponse.SessionRejected}
 */
proto.obb.SessionCreateResponse.SessionRejected.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionCreateResponse.SessionRejected;
  return proto.obb.SessionCreateResponse.SessionRejected.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionCreateResponse.SessionRejected} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionCreateResponse.SessionRejected}
 */
proto.obb.SessionCreateResponse.SessionRejected.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.obb.SessionRejectReason;
      reader.readMessage(value,proto.obb.SessionRejectReason.deserializeBinaryFromReader);
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionCreateResponse.SessionRejected.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionCreateResponse.SessionRejected.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionCreateResponse.SessionRejected} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionCreateResponse.SessionRejected.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.obb.SessionRejectReason.serializeBinaryToWriter
    );
  }
};


/**
 * optional SessionRejectReason reason = 1;
 * @return {?proto.obb.SessionRejectReason}
 */
proto.obb.SessionCreateResponse.SessionRejected.prototype.getReason = function() {
  return /** @type{?proto.obb.SessionRejectReason} */ (
    jspb.Message.getWrapperField(this, proto.obb.SessionRejectReason, 1));
};


/**
 * @param {?proto.obb.SessionRejectReason|undefined} value
 * @return {!proto.obb.SessionCreateResponse.SessionRejected} returns this
*/
proto.obb.SessionCreateResponse.SessionRejected.prototype.setReason = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.obb.SessionCreateResponse.SessionRejected} returns this
 */
proto.obb.SessionCreateResponse.SessionRejected.prototype.clearReason = function() {
  return this.setReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.obb.SessionCreateResponse.SessionRejected.prototype.hasReason = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.obb.SessionCreateResponse.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionCreateResponse} returns this
 */
proto.obb.SessionCreateResponse.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SessionCreated created = 2;
 * @return {?proto.obb.SessionCreateResponse.SessionCreated}
 */
proto.obb.SessionCreateResponse.prototype.getCreated = function() {
  return /** @type{?proto.obb.SessionCreateResponse.SessionCreated} */ (
    jspb.Message.getWrapperField(this, proto.obb.SessionCreateResponse.SessionCreated, 2));
};


/**
 * @param {?proto.obb.SessionCreateResponse.SessionCreated|undefined} value
 * @return {!proto.obb.SessionCreateResponse} returns this
*/
proto.obb.SessionCreateResponse.prototype.setCreated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.obb.SessionCreateResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.obb.SessionCreateResponse} returns this
 */
proto.obb.SessionCreateResponse.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.obb.SessionCreateResponse.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SessionRejected rejected = 3;
 * @return {?proto.obb.SessionCreateResponse.SessionRejected}
 */
proto.obb.SessionCreateResponse.prototype.getRejected = function() {
  return /** @type{?proto.obb.SessionCreateResponse.SessionRejected} */ (
    jspb.Message.getWrapperField(this, proto.obb.SessionCreateResponse.SessionRejected, 3));
};


/**
 * @param {?proto.obb.SessionCreateResponse.SessionRejected|undefined} value
 * @return {!proto.obb.SessionCreateResponse} returns this
*/
proto.obb.SessionCreateResponse.prototype.setRejected = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.obb.SessionCreateResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.obb.SessionCreateResponse} returns this
 */
proto.obb.SessionCreateResponse.prototype.clearRejected = function() {
  return this.setRejected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.obb.SessionCreateResponse.prototype.hasRejected = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
selectionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionSelection}
 */
proto.obb.SessionSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionSelection;
  return proto.obb.SessionSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionSelection}
 */
proto.obb.SessionSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string selection_id = 1;
 * @return {string}
 */
proto.obb.SessionSelection.prototype.getSelectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionSelection} returns this
 */
proto.obb.SessionSelection.prototype.setSelectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.obb.SessionMarket.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionMarket.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionMarket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionMarket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionMarket.toObject = function(includeInstance, msg) {
  var f, obj = {
marketId: jspb.Message.getFieldWithDefault(msg, 1, 0),
specifiers: jspb.Message.getFieldWithDefault(msg, 2, ""),
outcomesList: jspb.Message.toObjectList(msg.getOutcomesList(),
    proto.obb.SessionMarketOutcome.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionMarket}
 */
proto.obb.SessionMarket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionMarket;
  return proto.obb.SessionMarket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionMarket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionMarket}
 */
proto.obb.SessionMarket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecifiers(value);
      break;
    case 3:
      var value = new proto.obb.SessionMarketOutcome;
      reader.readMessage(value,proto.obb.SessionMarketOutcome.deserializeBinaryFromReader);
      msg.addOutcomes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionMarket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionMarket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionMarket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionMarket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSpecifiers();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOutcomesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.obb.SessionMarketOutcome.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 market_id = 1;
 * @return {number}
 */
proto.obb.SessionMarket.prototype.getMarketId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.obb.SessionMarket} returns this
 */
proto.obb.SessionMarket.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string specifiers = 2;
 * @return {string}
 */
proto.obb.SessionMarket.prototype.getSpecifiers = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionMarket} returns this
 */
proto.obb.SessionMarket.prototype.setSpecifiers = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SessionMarketOutcome outcomes = 3;
 * @return {!Array<!proto.obb.SessionMarketOutcome>}
 */
proto.obb.SessionMarket.prototype.getOutcomesList = function() {
  return /** @type{!Array<!proto.obb.SessionMarketOutcome>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.obb.SessionMarketOutcome, 3));
};


/**
 * @param {!Array<!proto.obb.SessionMarketOutcome>} value
 * @return {!proto.obb.SessionMarket} returns this
*/
proto.obb.SessionMarket.prototype.setOutcomesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.obb.SessionMarketOutcome=} opt_value
 * @param {number=} opt_index
 * @return {!proto.obb.SessionMarketOutcome}
 */
proto.obb.SessionMarket.prototype.addOutcomes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.obb.SessionMarketOutcome, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.obb.SessionMarket} returns this
 */
proto.obb.SessionMarket.prototype.clearOutcomesList = function() {
  return this.setOutcomesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionMarketOutcome.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionMarketOutcome.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionMarketOutcome} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionMarketOutcome.toObject = function(includeInstance, msg) {
  var f, obj = {
outcomeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
odds: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionMarketOutcome}
 */
proto.obb.SessionMarketOutcome.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionMarketOutcome;
  return proto.obb.SessionMarketOutcome.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionMarketOutcome} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionMarketOutcome}
 */
proto.obb.SessionMarketOutcome.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutcomeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOdds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionMarketOutcome.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionMarketOutcome.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionMarketOutcome} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionMarketOutcome.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutcomeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOdds();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string outcome_id = 1;
 * @return {string}
 */
proto.obb.SessionMarketOutcome.prototype.getOutcomeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionMarketOutcome} returns this
 */
proto.obb.SessionMarketOutcome.prototype.setOutcomeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 odds = 2;
 * @return {number}
 */
proto.obb.SessionMarketOutcome.prototype.getOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.obb.SessionMarketOutcome} returns this
 */
proto.obb.SessionMarketOutcome.prototype.setOdds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.obb.SessionInfoRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
selectionsList: jspb.Message.toObjectList(msg.getSelectionsList(),
    proto.obb.SessionSelection.toObject, includeInstance),
odds: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionInfoRequest}
 */
proto.obb.SessionInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionInfoRequest;
  return proto.obb.SessionInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionInfoRequest}
 */
proto.obb.SessionInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = new proto.obb.SessionSelection;
      reader.readMessage(value,proto.obb.SessionSelection.deserializeBinaryFromReader);
      msg.addSelections(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOdds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSelectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.obb.SessionSelection.serializeBinaryToWriter
    );
  }
  f = message.getOdds();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.obb.SessionInfoRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionInfoRequest} returns this
 */
proto.obb.SessionInfoRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SessionSelection selections = 2;
 * @return {!Array<!proto.obb.SessionSelection>}
 */
proto.obb.SessionInfoRequest.prototype.getSelectionsList = function() {
  return /** @type{!Array<!proto.obb.SessionSelection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.obb.SessionSelection, 2));
};


/**
 * @param {!Array<!proto.obb.SessionSelection>} value
 * @return {!proto.obb.SessionInfoRequest} returns this
*/
proto.obb.SessionInfoRequest.prototype.setSelectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.obb.SessionSelection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.obb.SessionSelection}
 */
proto.obb.SessionInfoRequest.prototype.addSelections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.obb.SessionSelection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.obb.SessionInfoRequest} returns this
 */
proto.obb.SessionInfoRequest.prototype.clearSelectionsList = function() {
  return this.setSelectionsList([]);
};


/**
 * optional uint64 odds = 3;
 * @return {number}
 */
proto.obb.SessionInfoRequest.prototype.getOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.obb.SessionInfoRequest} returns this
 */
proto.obb.SessionInfoRequest.prototype.setOdds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.obb.SessionInfoResponse.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.obb.SessionInfoResponse.StatusCase = {
  STATUS_NOT_SET: 0,
  VALID: 2,
  INVALID: 3
};

/**
 * @return {proto.obb.SessionInfoResponse.StatusCase}
 */
proto.obb.SessionInfoResponse.prototype.getStatusCase = function() {
  return /** @type {proto.obb.SessionInfoResponse.StatusCase} */(jspb.Message.computeOneofCase(this, proto.obb.SessionInfoResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
valid: (f = msg.getValid()) && proto.obb.SessionInfoResponse.ValidSession.toObject(includeInstance, f),
invalid: (f = msg.getInvalid()) && proto.obb.SessionInfoResponse.InvalidSession.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionInfoResponse}
 */
proto.obb.SessionInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionInfoResponse;
  return proto.obb.SessionInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionInfoResponse}
 */
proto.obb.SessionInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = new proto.obb.SessionInfoResponse.ValidSession;
      reader.readMessage(value,proto.obb.SessionInfoResponse.ValidSession.deserializeBinaryFromReader);
      msg.setValid(value);
      break;
    case 3:
      var value = new proto.obb.SessionInfoResponse.InvalidSession;
      reader.readMessage(value,proto.obb.SessionInfoResponse.InvalidSession.deserializeBinaryFromReader);
      msg.setInvalid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.obb.SessionInfoResponse.ValidSession.serializeBinaryToWriter
    );
  }
  f = message.getInvalid();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.obb.SessionInfoResponse.InvalidSession.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionInfoResponse.ValidSession.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionInfoResponse.ValidSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionInfoResponse.ValidSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoResponse.ValidSession.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionInfoResponse.ValidSession}
 */
proto.obb.SessionInfoResponse.ValidSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionInfoResponse.ValidSession;
  return proto.obb.SessionInfoResponse.ValidSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionInfoResponse.ValidSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionInfoResponse.ValidSession}
 */
proto.obb.SessionInfoResponse.ValidSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionInfoResponse.ValidSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionInfoResponse.ValidSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionInfoResponse.ValidSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoResponse.ValidSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.obb.SessionInfoResponse.InvalidSession.prototype.toObject = function(opt_includeInstance) {
  return proto.obb.SessionInfoResponse.InvalidSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.obb.SessionInfoResponse.InvalidSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoResponse.InvalidSession.toObject = function(includeInstance, msg) {
  var f, obj = {
reason: (f = msg.getReason()) && proto.obb.InvalidSessionReason.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.obb.SessionInfoResponse.InvalidSession}
 */
proto.obb.SessionInfoResponse.InvalidSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.obb.SessionInfoResponse.InvalidSession;
  return proto.obb.SessionInfoResponse.InvalidSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.obb.SessionInfoResponse.InvalidSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.obb.SessionInfoResponse.InvalidSession}
 */
proto.obb.SessionInfoResponse.InvalidSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.obb.InvalidSessionReason;
      reader.readMessage(value,proto.obb.InvalidSessionReason.deserializeBinaryFromReader);
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.obb.SessionInfoResponse.InvalidSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.obb.SessionInfoResponse.InvalidSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.obb.SessionInfoResponse.InvalidSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.obb.SessionInfoResponse.InvalidSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.obb.InvalidSessionReason.serializeBinaryToWriter
    );
  }
};


/**
 * optional InvalidSessionReason reason = 1;
 * @return {?proto.obb.InvalidSessionReason}
 */
proto.obb.SessionInfoResponse.InvalidSession.prototype.getReason = function() {
  return /** @type{?proto.obb.InvalidSessionReason} */ (
    jspb.Message.getWrapperField(this, proto.obb.InvalidSessionReason, 1));
};


/**
 * @param {?proto.obb.InvalidSessionReason|undefined} value
 * @return {!proto.obb.SessionInfoResponse.InvalidSession} returns this
*/
proto.obb.SessionInfoResponse.InvalidSession.prototype.setReason = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.obb.SessionInfoResponse.InvalidSession} returns this
 */
proto.obb.SessionInfoResponse.InvalidSession.prototype.clearReason = function() {
  return this.setReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.obb.SessionInfoResponse.InvalidSession.prototype.hasReason = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.obb.SessionInfoResponse.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.obb.SessionInfoResponse} returns this
 */
proto.obb.SessionInfoResponse.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ValidSession valid = 2;
 * @return {?proto.obb.SessionInfoResponse.ValidSession}
 */
proto.obb.SessionInfoResponse.prototype.getValid = function() {
  return /** @type{?proto.obb.SessionInfoResponse.ValidSession} */ (
    jspb.Message.getWrapperField(this, proto.obb.SessionInfoResponse.ValidSession, 2));
};


/**
 * @param {?proto.obb.SessionInfoResponse.ValidSession|undefined} value
 * @return {!proto.obb.SessionInfoResponse} returns this
*/
proto.obb.SessionInfoResponse.prototype.setValid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.obb.SessionInfoResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.obb.SessionInfoResponse} returns this
 */
proto.obb.SessionInfoResponse.prototype.clearValid = function() {
  return this.setValid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.obb.SessionInfoResponse.prototype.hasValid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InvalidSession invalid = 3;
 * @return {?proto.obb.SessionInfoResponse.InvalidSession}
 */
proto.obb.SessionInfoResponse.prototype.getInvalid = function() {
  return /** @type{?proto.obb.SessionInfoResponse.InvalidSession} */ (
    jspb.Message.getWrapperField(this, proto.obb.SessionInfoResponse.InvalidSession, 3));
};


/**
 * @param {?proto.obb.SessionInfoResponse.InvalidSession|undefined} value
 * @return {!proto.obb.SessionInfoResponse} returns this
*/
proto.obb.SessionInfoResponse.prototype.setInvalid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.obb.SessionInfoResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.obb.SessionInfoResponse} returns this
 */
proto.obb.SessionInfoResponse.prototype.clearInvalid = function() {
  return this.setInvalid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.obb.SessionInfoResponse.prototype.hasInvalid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.obb.SessionStatus = {
  SESSION_STATUS_UNSPECIFIED: 0,
  SESSION_STATUS_VALID: 1,
  SESSION_STATUS_INVALID: 2
};

goog.object.extend(exports, proto.obb);
