// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: obb/markets.proto

package obb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AvailableMarketsRequest is used as request for Markets RPC call
type AvailableMarketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event ID URN - e.g "od:match:xx"
	EventUrn      string `protobuf:"bytes,1,opt,name=event_urn,json=eventUrn,proto3" json:"event_urn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableMarketsRequest) Reset() {
	*x = AvailableMarketsRequest{}
	mi := &file_obb_markets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableMarketsRequest) ProtoMessage() {}

func (x *AvailableMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_obb_markets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableMarketsRequest.ProtoReflect.Descriptor instead.
func (*AvailableMarketsRequest) Descriptor() ([]byte, []int) {
	return file_obb_markets_proto_rawDescGZIP(), []int{0}
}

func (x *AvailableMarketsRequest) GetEventUrn() string {
	if x != nil {
		return x.EventUrn
	}
	return ""
}

// AvailableMarketsResponse is used as response for AvailableMarketsRequest RPC call
type AvailableMarketsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of available markets
	Markets       []*AvailableMarket `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableMarketsResponse) Reset() {
	*x = AvailableMarketsResponse{}
	mi := &file_obb_markets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableMarketsResponse) ProtoMessage() {}

func (x *AvailableMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_obb_markets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableMarketsResponse.ProtoReflect.Descriptor instead.
func (*AvailableMarketsResponse) Descriptor() ([]byte, []int) {
	return file_obb_markets_proto_rawDescGZIP(), []int{1}
}

func (x *AvailableMarketsResponse) GetMarkets() []*AvailableMarket {
	if x != nil {
		return x.Markets
	}
	return nil
}

type AvailableMarket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID using the same values as our odds feed in XML.
	MarketId uint32 `protobuf:"varint,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// The specifier is using the same values as our odds feed in XML.
	// Example: "variant=way:three|way=three|map=1"
	Specifiers    string `protobuf:"bytes,2,opt,name=specifiers,proto3" json:"specifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableMarket) Reset() {
	*x = AvailableMarket{}
	mi := &file_obb_markets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableMarket) ProtoMessage() {}

func (x *AvailableMarket) ProtoReflect() protoreflect.Message {
	mi := &file_obb_markets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableMarket.ProtoReflect.Descriptor instead.
func (*AvailableMarket) Descriptor() ([]byte, []int) {
	return file_obb_markets_proto_rawDescGZIP(), []int{2}
}

func (x *AvailableMarket) GetMarketId() uint32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *AvailableMarket) GetSpecifiers() string {
	if x != nil {
		return x.Specifiers
	}
	return ""
}

var File_obb_markets_proto protoreflect.FileDescriptor

const file_obb_markets_proto_rawDesc = "" +
	"\n" +
	"\x11obb/markets.proto\x12\x03obb\"6\n" +
	"\x17AvailableMarketsRequest\x12\x1b\n" +
	"\tevent_urn\x18\x01 \x01(\tR\beventUrn\"J\n" +
	"\x18AvailableMarketsResponse\x12.\n" +
	"\amarkets\x18\x01 \x03(\v2\x14.obb.AvailableMarketR\amarkets\"N\n" +
	"\x0fAvailableMarket\x12\x1b\n" +
	"\tmarket_id\x18\x01 \x01(\rR\bmarketId\x12\x1e\n" +
	"\n" +
	"specifiers\x18\x02 \x01(\tR\n" +
	"specifiersB5\n" +
	"\rcom.oddin.obbZ$github.com/oddin-gg/obbschema/go/obbb\x06proto3"

var (
	file_obb_markets_proto_rawDescOnce sync.Once
	file_obb_markets_proto_rawDescData []byte
)

func file_obb_markets_proto_rawDescGZIP() []byte {
	file_obb_markets_proto_rawDescOnce.Do(func() {
		file_obb_markets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_obb_markets_proto_rawDesc), len(file_obb_markets_proto_rawDesc)))
	})
	return file_obb_markets_proto_rawDescData
}

var file_obb_markets_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_obb_markets_proto_goTypes = []any{
	(*AvailableMarketsRequest)(nil),  // 0: obb.AvailableMarketsRequest
	(*AvailableMarketsResponse)(nil), // 1: obb.AvailableMarketsResponse
	(*AvailableMarket)(nil),          // 2: obb.AvailableMarket
}
var file_obb_markets_proto_depIdxs = []int32{
	2, // 0: obb.AvailableMarketsResponse.markets:type_name -> obb.AvailableMarket
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_obb_markets_proto_init() }
func file_obb_markets_proto_init() {
	if File_obb_markets_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_obb_markets_proto_rawDesc), len(file_obb_markets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_obb_markets_proto_goTypes,
		DependencyIndexes: file_obb_markets_proto_depIdxs,
		MessageInfos:      file_obb_markets_proto_msgTypes,
	}.Build()
	File_obb_markets_proto = out.File
	file_obb_markets_proto_goTypes = nil
	file_obb_markets_proto_depIdxs = nil
}
