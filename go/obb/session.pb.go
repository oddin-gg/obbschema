// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.3
// source: obb/session.proto

package obb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionStatus int32

const (
	// Not a valid value. Used for blocking 0 as invalid state.
	SessionStatus_SESSION_STATUS_UNSPECIFIED SessionStatus = 0
	// The session is valid and can still be used.
	SessionStatus_SESSION_STATUS_VALID SessionStatus = 1
	// Session is no longer valid.
	// Example: expired, not found or invalidated
	SessionStatus_SESSION_STATUS_INVALID SessionStatus = 2
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNSPECIFIED",
		1: "SESSION_STATUS_VALID",
		2: "SESSION_STATUS_INVALID",
	}
	SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNSPECIFIED": 0,
		"SESSION_STATUS_VALID":       1,
		"SESSION_STATUS_INVALID":     2,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_obb_session_proto_enumTypes[0].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_obb_session_proto_enumTypes[0]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{0}
}

type SessionRejectReason_Code int32

const (
	// Not a valid value. Used for blocking 0 as invalid state.
	SessionRejectReason_CODE_UNSPECIFIED SessionRejectReason_Code = 0
	// Session rejected due to internal server problems.
	SessionRejectReason_CODE_INTERNAL SessionRejectReason_Code = 1
	// Session rejected due to incorrect or malformed arguments.
	SessionRejectReason_CODE_INVALID_ARGUMENT SessionRejectReason_Code = 2
	// Session rejected due to invalid market combination.
	SessionRejectReason_CODE_INVALID_MARKET_COMBINATION SessionRejectReason_Code = 3
	// Session rejected due to inactive market.
	SessionRejectReason_CODE_INACTIVE_MARKET SessionRejectReason_Code = 4
)

// Enum value maps for SessionRejectReason_Code.
var (
	SessionRejectReason_Code_name = map[int32]string{
		0: "CODE_UNSPECIFIED",
		1: "CODE_INTERNAL",
		2: "CODE_INVALID_ARGUMENT",
		3: "CODE_INVALID_MARKET_COMBINATION",
		4: "CODE_INACTIVE_MARKET",
	}
	SessionRejectReason_Code_value = map[string]int32{
		"CODE_UNSPECIFIED":                0,
		"CODE_INTERNAL":                   1,
		"CODE_INVALID_ARGUMENT":           2,
		"CODE_INVALID_MARKET_COMBINATION": 3,
		"CODE_INACTIVE_MARKET":            4,
	}
)

func (x SessionRejectReason_Code) Enum() *SessionRejectReason_Code {
	p := new(SessionRejectReason_Code)
	*p = x
	return p
}

func (x SessionRejectReason_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionRejectReason_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_obb_session_proto_enumTypes[1].Descriptor()
}

func (SessionRejectReason_Code) Type() protoreflect.EnumType {
	return &file_obb_session_proto_enumTypes[1]
}

func (x SessionRejectReason_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionRejectReason_Code.Descriptor instead.
func (SessionRejectReason_Code) EnumDescriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{0, 0}
}

type InvalidSessionReason_Code int32

const (
	// Not a valid value. Used for blocking 0 as invalid state.
	InvalidSessionReason_CODE_UNSPECIFIED InvalidSessionReason_Code = 0
	// Session invalid due to internal server problems.
	InvalidSessionReason_CODE_INTERNAL InvalidSessionReason_Code = 1
	// Session invalid due to incorrect or malformed arguments.
	InvalidSessionReason_CODE_INVALID_ARGUMENT InvalidSessionReason_Code = 2
	// Session is expired.
	InvalidSessionReason_CODE_EXPIRED InvalidSessionReason_Code = 3
	// Session not found in our system.
	InvalidSessionReason_CODE_NOT_FOUND InvalidSessionReason_Code = 4
)

// Enum value maps for InvalidSessionReason_Code.
var (
	InvalidSessionReason_Code_name = map[int32]string{
		0: "CODE_UNSPECIFIED",
		1: "CODE_INTERNAL",
		2: "CODE_INVALID_ARGUMENT",
		3: "CODE_EXPIRED",
		4: "CODE_NOT_FOUND",
	}
	InvalidSessionReason_Code_value = map[string]int32{
		"CODE_UNSPECIFIED":      0,
		"CODE_INTERNAL":         1,
		"CODE_INVALID_ARGUMENT": 2,
		"CODE_EXPIRED":          3,
		"CODE_NOT_FOUND":        4,
	}
)

func (x InvalidSessionReason_Code) Enum() *InvalidSessionReason_Code {
	p := new(InvalidSessionReason_Code)
	*p = x
	return p
}

func (x InvalidSessionReason_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvalidSessionReason_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_obb_session_proto_enumTypes[2].Descriptor()
}

func (InvalidSessionReason_Code) Type() protoreflect.EnumType {
	return &file_obb_session_proto_enumTypes[2]
}

func (x InvalidSessionReason_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvalidSessionReason_Code.Descriptor instead.
func (InvalidSessionReason_Code) EnumDescriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{1, 0}
}

type SessionRejectReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reason code.
	Code SessionRejectReason_Code `protobuf:"varint,1,opt,name=code,proto3,enum=obb.SessionRejectReason_Code" json:"code,omitempty"`
	// Message describing a reason.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SessionRejectReason) Reset() {
	*x = SessionRejectReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionRejectReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRejectReason) ProtoMessage() {}

func (x *SessionRejectReason) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRejectReason.ProtoReflect.Descriptor instead.
func (*SessionRejectReason) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{0}
}

func (x *SessionRejectReason) GetCode() SessionRejectReason_Code {
	if x != nil {
		return x.Code
	}
	return SessionRejectReason_CODE_UNSPECIFIED
}

func (x *SessionRejectReason) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InvalidSessionReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reason code.
	Code InvalidSessionReason_Code `protobuf:"varint,1,opt,name=code,proto3,enum=obb.InvalidSessionReason_Code" json:"code,omitempty"`
	// Message describing a reason.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidSessionReason) Reset() {
	*x = InvalidSessionReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidSessionReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidSessionReason) ProtoMessage() {}

func (x *InvalidSessionReason) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidSessionReason.ProtoReflect.Descriptor instead.
func (*InvalidSessionReason) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{1}
}

func (x *InvalidSessionReason) GetCode() InvalidSessionReason_Code {
	if x != nil {
		return x.Code
	}
	return InvalidSessionReason_CODE_UNSPECIFIED
}

func (x *InvalidSessionReason) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SessionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of desired selections to include in the new session.
	// Format: "<event_id>/<market_id>/<outcome_id>?<market_specifier>"
	// Example: “od:match:1234/1/1?map=1&way=two”
	SelectionIds []string `protobuf:"bytes,2,rep,name=selection_ids,json=selectionIds,proto3" json:"selection_ids,omitempty"`
}

func (x *SessionCreateRequest) Reset() {
	*x = SessionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCreateRequest) ProtoMessage() {}

func (x *SessionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCreateRequest.ProtoReflect.Descriptor instead.
func (*SessionCreateRequest) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{2}
}

func (x *SessionCreateRequest) GetSelectionIds() []string {
	if x != nil {
		return x.SelectionIds
	}
	return nil
}

type SessionCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session ID created by operator.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are assignable to Status:
	//	*SessionCreateResponse_Created
	//	*SessionCreateResponse_Rejected
	Status isSessionCreateResponse_Status `protobuf_oneof:"status"`
}

func (x *SessionCreateResponse) Reset() {
	*x = SessionCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCreateResponse) ProtoMessage() {}

func (x *SessionCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCreateResponse.ProtoReflect.Descriptor instead.
func (*SessionCreateResponse) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{3}
}

func (x *SessionCreateResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (m *SessionCreateResponse) GetStatus() isSessionCreateResponse_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *SessionCreateResponse) GetCreated() *SessionCreateResponse_SessionCreated {
	if x, ok := x.GetStatus().(*SessionCreateResponse_Created); ok {
		return x.Created
	}
	return nil
}

func (x *SessionCreateResponse) GetRejected() *SessionCreateResponse_SessionRejected {
	if x, ok := x.GetStatus().(*SessionCreateResponse_Rejected); ok {
		return x.Rejected
	}
	return nil
}

type isSessionCreateResponse_Status interface {
	isSessionCreateResponse_Status()
}

type SessionCreateResponse_Created struct {
	// Successfully created session information.
	Created *SessionCreateResponse_SessionCreated `protobuf:"bytes,2,opt,name=created,proto3,oneof"`
}

type SessionCreateResponse_Rejected struct {
	// Session creation was rejected.
	Rejected *SessionCreateResponse_SessionRejected `protobuf:"bytes,3,opt,name=rejected,proto3,oneof"`
}

func (*SessionCreateResponse_Created) isSessionCreateResponse_Status() {}

func (*SessionCreateResponse_Rejected) isSessionCreateResponse_Status() {}

type SessionSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format: "<event_id>/<market_id>/<outcome_id>?<market_specifier>"
	// Example: “od:match:1234/1/1?map=1&way=two”
	SelectionId string `protobuf:"bytes,1,opt,name=selection_id,json=selectionId,proto3" json:"selection_id,omitempty"`
}

func (x *SessionSelection) Reset() {
	*x = SessionSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSelection) ProtoMessage() {}

func (x *SessionSelection) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSelection.ProtoReflect.Descriptor instead.
func (*SessionSelection) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{4}
}

func (x *SessionSelection) GetSelectionId() string {
	if x != nil {
		return x.SelectionId
	}
	return ""
}

type SessionMarket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID using the same values as our odds feed in XML.
	MarketId uint32 `protobuf:"varint,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// The specifier is using the same values as our odds feed in XML.
	// Example: "variant=way:three|way=three|map=1"
	Specifiers string `protobuf:"bytes,2,opt,name=specifiers,proto3" json:"specifiers,omitempty"`
	// List of available outcomes for the market.
	Outcomes []*SessionMarketOutcome `protobuf:"bytes,3,rep,name=outcomes,proto3" json:"outcomes,omitempty"`
}

func (x *SessionMarket) Reset() {
	*x = SessionMarket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionMarket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionMarket) ProtoMessage() {}

func (x *SessionMarket) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionMarket.ProtoReflect.Descriptor instead.
func (*SessionMarket) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{5}
}

func (x *SessionMarket) GetMarketId() uint32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *SessionMarket) GetSpecifiers() string {
	if x != nil {
		return x.Specifiers
	}
	return ""
}

func (x *SessionMarket) GetOutcomes() []*SessionMarketOutcome {
	if x != nil {
		return x.Outcomes
	}
	return nil
}

type SessionMarketOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID using the same values as our odds feed in <outcome> XML tag.
	// Example: "10" for classic market or "od:player:123" for dynamic markets.
	OutcomeId string `protobuf:"bytes,1,opt,name=outcome_id,json=outcomeId,proto3" json:"outcome_id,omitempty"`
	// Odds multiplied by 10000 and rounded to uint value.
	Odds uint64 `protobuf:"varint,2,opt,name=odds,proto3" json:"odds,omitempty"`
}

func (x *SessionMarketOutcome) Reset() {
	*x = SessionMarketOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionMarketOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionMarketOutcome) ProtoMessage() {}

func (x *SessionMarketOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionMarketOutcome.ProtoReflect.Descriptor instead.
func (*SessionMarketOutcome) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{6}
}

func (x *SessionMarketOutcome) GetOutcomeId() string {
	if x != nil {
		return x.OutcomeId
	}
	return ""
}

func (x *SessionMarketOutcome) GetOdds() uint64 {
	if x != nil {
		return x.Odds
	}
	return 0
}

type SessionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session ID created by operator.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// List of selections used for the OBB combination.
	Selections []*SessionSelection `protobuf:"bytes,2,rep,name=selections,proto3" json:"selections,omitempty"`
	// Final odds for the selected combination of picks.
	// Odds multiplied by 10000 and rounded to uint value.
	Odds uint64 `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`
}

func (x *SessionInfoRequest) Reset() {
	*x = SessionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfoRequest) ProtoMessage() {}

func (x *SessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfoRequest.ProtoReflect.Descriptor instead.
func (*SessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{7}
}

func (x *SessionInfoRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionInfoRequest) GetSelections() []*SessionSelection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *SessionInfoRequest) GetOdds() uint64 {
	if x != nil {
		return x.Odds
	}
	return 0
}

type SessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Session ID created by operator.
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are assignable to Status:
	//	*SessionInfoResponse_Valid
	//	*SessionInfoResponse_Invalid
	Status isSessionInfoResponse_Status `protobuf_oneof:"status"`
}

func (x *SessionInfoResponse) Reset() {
	*x = SessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfoResponse) ProtoMessage() {}

func (x *SessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfoResponse.ProtoReflect.Descriptor instead.
func (*SessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{8}
}

func (x *SessionInfoResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (m *SessionInfoResponse) GetStatus() isSessionInfoResponse_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *SessionInfoResponse) GetValid() *SessionInfoResponse_ValidSession {
	if x, ok := x.GetStatus().(*SessionInfoResponse_Valid); ok {
		return x.Valid
	}
	return nil
}

func (x *SessionInfoResponse) GetInvalid() *SessionInfoResponse_InvalidSession {
	if x, ok := x.GetStatus().(*SessionInfoResponse_Invalid); ok {
		return x.Invalid
	}
	return nil
}

type isSessionInfoResponse_Status interface {
	isSessionInfoResponse_Status()
}

type SessionInfoResponse_Valid struct {
	// The session is valid and can still be used.
	Valid *SessionInfoResponse_ValidSession `protobuf:"bytes,2,opt,name=valid,proto3,oneof"`
}

type SessionInfoResponse_Invalid struct {
	// Session is not valid anymore.
	Invalid *SessionInfoResponse_InvalidSession `protobuf:"bytes,3,opt,name=invalid,proto3,oneof"`
}

func (*SessionInfoResponse_Valid) isSessionInfoResponse_Status() {}

func (*SessionInfoResponse_Invalid) isSessionInfoResponse_Status() {}

type SessionCreateResponse_SessionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of selections used in the current session.
	Selections []*SessionSelection `protobuf:"bytes,1,rep,name=selections,proto3" json:"selections,omitempty"`
	// Final odds for the selected combination of picks.
	// Odds multiplied by 10000 and rounded to uint value.
	Odds uint64 `protobuf:"varint,2,opt,name=odds,proto3" json:"odds,omitempty"`
	// Available markets for the new session with the current session selections.
	AvailableMarkets []*SessionMarket `protobuf:"bytes,3,rep,name=available_markets,json=availableMarkets,proto3" json:"available_markets,omitempty"`
}

func (x *SessionCreateResponse_SessionCreated) Reset() {
	*x = SessionCreateResponse_SessionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCreateResponse_SessionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCreateResponse_SessionCreated) ProtoMessage() {}

func (x *SessionCreateResponse_SessionCreated) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCreateResponse_SessionCreated.ProtoReflect.Descriptor instead.
func (*SessionCreateResponse_SessionCreated) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SessionCreateResponse_SessionCreated) GetSelections() []*SessionSelection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *SessionCreateResponse_SessionCreated) GetOdds() uint64 {
	if x != nil {
		return x.Odds
	}
	return 0
}

func (x *SessionCreateResponse_SessionCreated) GetAvailableMarkets() []*SessionMarket {
	if x != nil {
		return x.AvailableMarkets
	}
	return nil
}

type SessionCreateResponse_SessionRejected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Information about rejection reason.
	Reason *SessionRejectReason `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SessionCreateResponse_SessionRejected) Reset() {
	*x = SessionCreateResponse_SessionRejected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionCreateResponse_SessionRejected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCreateResponse_SessionRejected) ProtoMessage() {}

func (x *SessionCreateResponse_SessionRejected) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionCreateResponse_SessionRejected.ProtoReflect.Descriptor instead.
func (*SessionCreateResponse_SessionRejected) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{3, 1}
}

func (x *SessionCreateResponse_SessionRejected) GetReason() *SessionRejectReason {
	if x != nil {
		return x.Reason
	}
	return nil
}

type SessionInfoResponse_ValidSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SessionInfoResponse_ValidSession) Reset() {
	*x = SessionInfoResponse_ValidSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfoResponse_ValidSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfoResponse_ValidSession) ProtoMessage() {}

func (x *SessionInfoResponse_ValidSession) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfoResponse_ValidSession.ProtoReflect.Descriptor instead.
func (*SessionInfoResponse_ValidSession) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{8, 0}
}

type SessionInfoResponse_InvalidSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// It will provide more detailed information about why the session is no longer valid.
	Reason *InvalidSessionReason `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SessionInfoResponse_InvalidSession) Reset() {
	*x = SessionInfoResponse_InvalidSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_obb_session_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfoResponse_InvalidSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfoResponse_InvalidSession) ProtoMessage() {}

func (x *SessionInfoResponse_InvalidSession) ProtoReflect() protoreflect.Message {
	mi := &file_obb_session_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfoResponse_InvalidSession.ProtoReflect.Descriptor instead.
func (*SessionInfoResponse_InvalidSession) Descriptor() ([]byte, []int) {
	return file_obb_session_proto_rawDescGZIP(), []int{8, 1}
}

func (x *SessionInfoResponse_InvalidSession) GetReason() *InvalidSessionReason {
	if x != nil {
		return x.Reason
	}
	return nil
}

var File_obb_session_proto protoreflect.FileDescriptor

var file_obb_session_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6f, 0x62, 0x62, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6f, 0x62, 0x62, 0x22, 0xee, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x31, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x42, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x04, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x70, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x04, 0x22, 0x3b, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22,
	0xb5, 0x03, 0x0a, 0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x62, 0x62, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x48, 0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0x9c, 0x01, 0x0a, 0x0e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0a,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x1a, 0x43, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x62,
	0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x08, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x83,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x22,
	0x7e, 0x0a, 0x12, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x22,
	0x97, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x62, 0x62, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x1a, 0x0e, 0x0a, 0x0c, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x43, 0x0a, 0x0e, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x62, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x65, 0x0a, 0x0d, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02,
	0x42, 0x35, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x64, 0x64, 0x69, 0x6e, 0x2e, 0x6f, 0x62,
	0x62, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x64,
	0x64, 0x69, 0x6e, 0x2d, 0x67, 0x67, 0x2f, 0x6f, 0x62, 0x62, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2f, 0x67, 0x6f, 0x2f, 0x6f, 0x62, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_obb_session_proto_rawDescOnce sync.Once
	file_obb_session_proto_rawDescData = file_obb_session_proto_rawDesc
)

func file_obb_session_proto_rawDescGZIP() []byte {
	file_obb_session_proto_rawDescOnce.Do(func() {
		file_obb_session_proto_rawDescData = protoimpl.X.CompressGZIP(file_obb_session_proto_rawDescData)
	})
	return file_obb_session_proto_rawDescData
}

var file_obb_session_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_obb_session_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_obb_session_proto_goTypes = []interface{}{
	(SessionStatus)(0),                            // 0: obb.SessionStatus
	(SessionRejectReason_Code)(0),                 // 1: obb.SessionRejectReason.Code
	(InvalidSessionReason_Code)(0),                // 2: obb.InvalidSessionReason.Code
	(*SessionRejectReason)(nil),                   // 3: obb.SessionRejectReason
	(*InvalidSessionReason)(nil),                  // 4: obb.InvalidSessionReason
	(*SessionCreateRequest)(nil),                  // 5: obb.SessionCreateRequest
	(*SessionCreateResponse)(nil),                 // 6: obb.SessionCreateResponse
	(*SessionSelection)(nil),                      // 7: obb.SessionSelection
	(*SessionMarket)(nil),                         // 8: obb.SessionMarket
	(*SessionMarketOutcome)(nil),                  // 9: obb.SessionMarketOutcome
	(*SessionInfoRequest)(nil),                    // 10: obb.SessionInfoRequest
	(*SessionInfoResponse)(nil),                   // 11: obb.SessionInfoResponse
	(*SessionCreateResponse_SessionCreated)(nil),  // 12: obb.SessionCreateResponse.SessionCreated
	(*SessionCreateResponse_SessionRejected)(nil), // 13: obb.SessionCreateResponse.SessionRejected
	(*SessionInfoResponse_ValidSession)(nil),      // 14: obb.SessionInfoResponse.ValidSession
	(*SessionInfoResponse_InvalidSession)(nil),    // 15: obb.SessionInfoResponse.InvalidSession
}
var file_obb_session_proto_depIdxs = []int32{
	1,  // 0: obb.SessionRejectReason.code:type_name -> obb.SessionRejectReason.Code
	2,  // 1: obb.InvalidSessionReason.code:type_name -> obb.InvalidSessionReason.Code
	12, // 2: obb.SessionCreateResponse.created:type_name -> obb.SessionCreateResponse.SessionCreated
	13, // 3: obb.SessionCreateResponse.rejected:type_name -> obb.SessionCreateResponse.SessionRejected
	9,  // 4: obb.SessionMarket.outcomes:type_name -> obb.SessionMarketOutcome
	7,  // 5: obb.SessionInfoRequest.selections:type_name -> obb.SessionSelection
	14, // 6: obb.SessionInfoResponse.valid:type_name -> obb.SessionInfoResponse.ValidSession
	15, // 7: obb.SessionInfoResponse.invalid:type_name -> obb.SessionInfoResponse.InvalidSession
	7,  // 8: obb.SessionCreateResponse.SessionCreated.selections:type_name -> obb.SessionSelection
	8,  // 9: obb.SessionCreateResponse.SessionCreated.available_markets:type_name -> obb.SessionMarket
	3,  // 10: obb.SessionCreateResponse.SessionRejected.reason:type_name -> obb.SessionRejectReason
	4,  // 11: obb.SessionInfoResponse.InvalidSession.reason:type_name -> obb.InvalidSessionReason
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_obb_session_proto_init() }
func file_obb_session_proto_init() {
	if File_obb_session_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_obb_session_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionRejectReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidSessionReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionMarket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionMarketOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionCreateResponse_SessionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionCreateResponse_SessionRejected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfoResponse_ValidSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_obb_session_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfoResponse_InvalidSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_obb_session_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SessionCreateResponse_Created)(nil),
		(*SessionCreateResponse_Rejected)(nil),
	}
	file_obb_session_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SessionInfoResponse_Valid)(nil),
		(*SessionInfoResponse_Invalid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_obb_session_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_obb_session_proto_goTypes,
		DependencyIndexes: file_obb_session_proto_depIdxs,
		EnumInfos:         file_obb_session_proto_enumTypes,
		MessageInfos:      file_obb_session_proto_msgTypes,
	}.Build()
	File_obb_session_proto = out.File
	file_obb_session_proto_rawDesc = nil
	file_obb_session_proto_goTypes = nil
	file_obb_session_proto_depIdxs = nil
}
